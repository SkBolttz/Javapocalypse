// Class Ponto
------------------------------------------------------------------------------------------------------------

package com.mycompany.quadrante;
public class Ponto {
    private int y;
    private int x;

    /**
     * Este construtor parte de valores flexíveis.
     * 
     *  @param y.
     *  @param x.
     * 
     */
    
    public Ponto() {
    }
    
    /**
     * Este construtor parte de valores fixos, pré definidos dentro do construtor.
     * @param y
     * @param x 
     */
    public Ponto(int y, int x) {
        this.y = y;
        this.x = x;
    }

    public int getY() {
        return y;
    }

    public int getX() {
        return x;
    }

    public void setY(int y) {
        this.y = y;
    }

    public void setX(int x) {
        this.x = x;
    }
    
    /**
     * Este Parâmetro identifica onde esta o quadrante.
     * 
     * y > 0 e y > = Quadrante 1
     * x < 0 e y > 0 = Quadrante 2
     * x < 0 e y < 0 = Quadrante 3
     * x > 0 e y < 0 = Quadrante 4
     * caso ambos sejam 0 = Nenhum
     * @return Irá retornar em qual Quadrante esta localizado.
     */
    public Quadrante identificarQuadrante(){
        if(x > 0 && y > 0){
            return Quadrante.PRIMEIRO;
        }else if(x < 0 && y > 0){
            return Quadrante.SEGUNDO;
        }else if(x < 0 && y < 0){
            return Quadrante.TERCEIRO;
        }else if(x > 0 && y < 0){
            return Quadrante.QUARTO;    
        }else{
            return Quadrante.NENHUM;
        }
    }
    
    /**
     * Neste parâmetro irá verificar se o valor esta sendo indicado dentro de X.
     * @return Caso esteja dentro de X, irá retornar true;
     */
    public boolean estaIndicandoSobreX(){
            if(x > 0 && y > 0 || x < 0 && y > 0){
                return true;
            }
            return false;
    }
    
    /**
     * Neste parâmetro irá verificar se o valor esta sendo indicado dentro Y.
     * @return Caso esteja dentro de Y, irá retornar true;
     */
    public boolean estaIndicandoSobreY(){
            if(x < 0 && y < 0 || x > 0 && y < 0){
                return true;
            }
            return false;
    }
    
    /**
     * Neste Parâmetro irá calcular a distância entre pontos flexíveis.
     * @param outroPonto
     * @return Irá retornar a distância dos pontos;
     */
    public double calcularDistancia(Ponto outroPonto){        
        double X = outroPonto.getX() - this.getX();
        double Y = outroPonto.getY() - this.getY();
        
        double d = Math.sqrt(Math.pow(X, 2) + Math.pow(Y, 2));
        return d;
    }
    
    /**
     * Neste Parâmetro irá caluclar a distância entre pontos pré definidos.
     * @param p1
     * @param p2
     * @return Irá retornar a distância dos pontos;
     */
    public double calcularDistancia(Ponto p1, Ponto p2){
        double X = p2.getX() - p1.getX();
        double Y = p2.getY() - p1.getY();
        
        double d = Math.sqrt(Math.pow(X, 2) + Math.pow(Y, 2));
        return d;
    }
    
}

------------------------------------------------------------------------------------------------------------
// Class Enum Quadrante
------------------------------------------------------------------------------------------------------------

package com.mycompany.quadrante;
public enum Quadrante {
    NENHUM, PRIMEIRO, SEGUNDO, TERCEIRO, QUARTO
}

------------------------------------------------------------------------------------------------------------
// Class Interface
------------------------------------------------------------------------------------------------------------

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.quadrante;
import java.awt.FlowLayout;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
/**
 *
 * @author henrique
 */
public class Interface extends javax.swing.JFrame {

    /**
     * Creates new form Interface
     */
    public Interface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfEixoX = new javax.swing.JTextField();
        tfEixoY = new javax.swing.JTextField();
        btAvaliar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jbEixoX = new javax.swing.JCheckBox();
        jbEixoY = new javax.swing.JCheckBox();
        jbQuadrante1 = new javax.swing.JCheckBox();
        jbQuadrante2 = new javax.swing.JCheckBox();
        jbQuadrante3 = new javax.swing.JCheckBox();
        jbQuadrante4 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Eixo X:");

        jLabel2.setText("Eixo Y:");

        tfEixoX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfEixoXActionPerformed(evt);
            }
        });

        btAvaliar.setText("Avaliar");
        btAvaliar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAvaliarActionPerformed(evt);
            }
        });

        jLabel3.setText("Posição:");

        jbEixoX.setText("Incide no Eixo X");
        jbEixoX.setEnabled(false);
        jbEixoX.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jbEixoXStateChanged(evt);
            }
        });
        jbEixoX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEixoXActionPerformed(evt);
            }
        });

        jbEixoY.setText("Incide no Eixo Y");
        jbEixoY.setEnabled(false);
        jbEixoY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEixoYActionPerformed(evt);
            }
        });

        jbQuadrante1.setText("No 1º Quadrante");
        jbQuadrante1.setEnabled(false);
        jbQuadrante1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbQuadrante1ActionPerformed(evt);
            }
        });

        jbQuadrante2.setText("No 2º Quadrante");
        jbQuadrante2.setEnabled(false);
        jbQuadrante2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbQuadrante2ActionPerformed(evt);
            }
        });

        jbQuadrante3.setText("No 3º Quadrante");
        jbQuadrante3.setEnabled(false);
        jbQuadrante3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbQuadrante3ActionPerformed(evt);
            }
        });

        jbQuadrante4.setText("No 4º Quadrante");
        jbQuadrante4.setEnabled(false);
        jbQuadrante4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbQuadrante4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tfEixoY, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tfEixoX, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addComponent(btAvaliar)
                .addGap(88, 88, 88))
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jbQuadrante4)
                        .addComponent(jbQuadrante3)
                        .addComponent(jbQuadrante2)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbEixoX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbEixoY, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jbQuadrante1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tfEixoX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tfEixoY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(btAvaliar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbEixoX)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbEixoY)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbQuadrante1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbQuadrante2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbQuadrante3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbQuadrante4)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void tfEixoXActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void btAvaliarActionPerformed(java.awt.event.ActionEvent evt) {                                          
       Ponto ponto = new Ponto();
        
        ponto.setX(Integer.parseInt(tfEixoX.getText()));
        ponto.setY(Integer.parseInt(tfEixoY.getText()));
        
        Quadrante quadrante = ponto.identificarQuadrante();
        
        if(quadrante == Quadrante.PRIMEIRO){
            jbQuadrante1.setSelected(true);
        }else if (quadrante == Quadrante.SEGUNDO){
            jbQuadrante2.setSelected(true);
        }else if (quadrante == Quadrante.TERCEIRO){
            jbQuadrante3.setSelected(true);
        }else if (quadrante == Quadrante.QUARTO){
            jbQuadrante4.setSelected(true);
        }
        
        
        if(ponto.estaIndicandoSobreX()){
            jbEixoX.setSelected(true);
        }else{
            jbEixoY.setSelected(true);
        }
            }                                         

    private void jbEixoXActionPerformed(java.awt.event.ActionEvent evt) {                                        

    }                                       

    private void jbQuadrante2ActionPerformed(java.awt.event.ActionEvent evt) {                                             
    }                                            

    private void jbQuadrante3ActionPerformed(java.awt.event.ActionEvent evt) {                                             
  
    }                                            

    private void jbQuadrante4ActionPerformed(java.awt.event.ActionEvent evt) {                                             
     
    }                                            

    private void jbEixoYActionPerformed(java.awt.event.ActionEvent evt) {                                        

    }                                       

    private void jbQuadrante1ActionPerformed(java.awt.event.ActionEvent evt) {                                             
    
    }                                            

    private void jbEixoXStateChanged(javax.swing.event.ChangeEvent evt) {                                     
                  
    }                                    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
